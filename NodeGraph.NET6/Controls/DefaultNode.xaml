<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:NodeGraph.NET6.Converters"
    xmlns:local="clr-namespace:NodeGraph.NET6.Controls">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NodeGraph.NET6;component/Controls/NodeLink.xaml" />
        <ResourceDictionary Source="/NodeGraph.NET6;component/Controls/NodeInput.xaml" />
        <ResourceDictionary Source="/NodeGraph.NET6;component/Controls/NodeOutput.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:BooleanToColorConverter x:Key="BooleanToColorConverter" />

    <Style TargetType="{x:Type local:DefaultNode}">
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="InputMargin" Value="2" />
        <Setter Property="BorderBrush" Value="#3F3F3F" />
        <Setter Property="Background" Value="#272727" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderBrush" Value="#727184" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderBrush" Value="#706ADB" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="__NodeTemplate__" TargetType="{x:Type local:DefaultNode}">
        <Border Padding="0,0,0,0">
            <StackPanel Orientation="Horizontal">
                <Border
                    Padding="0,10,0,10"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="__NodeInputGridColumnDefinition__" MinWidth="30" />
                            <ColumnDefinition x:Name="__NodeContentTemplateGridColumnDefinition__" Width="*" />
                            <ColumnDefinition x:Name="__NodeOutputGridColumnDefinition__" MinWidth="30" />
                        </Grid.ColumnDefinitions>

                        <local:NodeInput
                            x:Name="__NodeInput__"
                            Grid.Column="0"
                            Margin="-5,0,0,0"
                            VerticalAlignment="{TemplateBinding InputLayout}"
                            ConnectorMargin="{TemplateBinding InputMargin}"
                            ItemContainerStyle="{TemplateBinding InputStyle}"
                            ItemsSource="{TemplateBinding Inputs}" />

                        <Label
                            Grid.Column="1"
                            Margin="20,0,20,0"
                            VerticalAlignment="Center"
                            Content="{Binding Name}"
                            FontFamily="Inter"
                            FontSize="20"
                            Foreground="White" />

                        <!--<ContentPresenter Grid.Column="1"
                                      x:Name="__NodeContentTemplate__"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding ContentMargin}"
                                      Content="{TemplateBinding DataContext}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>-->

                        <local:NodeOutput
                            x:Name="__NodeOutput__"
                            Grid.Column="2"
                            Margin="0,0,-5,0"
                            VerticalAlignment="{TemplateBinding OutputLayout}"
                            ConnectorMargin="{TemplateBinding OutputMargin}"
                            ItemContainerStyle="{TemplateBinding OutputStyle}"
                            ItemsSource="{TemplateBinding Outputs}" />
                    </Grid>
                </Border>
                <Grid HorizontalAlignment="Stretch" Background="Transparent">
                    <Button
                        Width="30"
                        Height="30"
                        Margin="10,0,10,0"
                        Padding="0"
                        Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding AddOutputCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:DefaultNode}}}"
                        IsEnabled="True"
                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:DefaultNode}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button.Content>
                            <Path
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                Data="M10,7 A1,1 0 1,1 8,7 A1,1 0 1,1 10,7              M4,20 A1,1 0 1,1 2,20 A1,1 0 1,1 4,20             M4.7,19.3 L19,5              M21,3 L18,4 L20,6 Z             M9.26,7.68 L5,12 L7,17             M10,14 L15,16 L18.5,12.5             M18,12 L19,11 L20,12 L19,13 Z"
                                Stroke="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}, Converter={StaticResource BooleanToColorConverter}}"
                                StrokeLineJoin="Round"
                                StrokeThickness="2">
                                <Path.LayoutTransform>
                                    <RotateTransform Angle="45" />
                                </Path.LayoutTransform>
                            </Path>
                        </Button.Content>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border
                                                x:Name="border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </StackPanel>

        </Border>
    </ControlTemplate>

</ResourceDictionary>
