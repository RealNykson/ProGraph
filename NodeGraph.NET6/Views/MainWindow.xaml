<Window
    x:Class="NodeGraph.NET6.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:NodeGraph.NET6.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:NodeGraph.NET6"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:NodeGraph.NET6.ViewModels"
    Title="NodeGraph - prototype"
    Width="1000"
    Height="600"
    AllowsTransparency="False"
    ResizeMode="CanResize"
    WindowStyle="SingleBorderWindow"
    mc:Ignorable="d">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>






    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CornerRadius="{x:Static SystemParameters.WindowCornerRadius}"
            GlassFrameThickness="1,0,1,1"
            NonClientFrameEdges="Left,Right,Bottom"
            ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <!--<RowDefinition Height="64" />-->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Background="#3F3F3F">



            <StackPanel
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">



                <Button
                    Width="35"
                    Height="35"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding MinimizeWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path
                        Width="10"
                        Height="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L10,0"
                        Stretch="Uniform"
                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        StrokeThickness="1" />
                </Button>
                <Button
                    Width="35"
                    Height="35"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding MaximizeWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M2,2 L10,2 L10,10 L2,10 Z M0,0 L8,0 L8,8 L0,8 Z"
                                                Fill="Transparent"
                                                Stretch="Uniform"
                                                Stroke="White"
                                                StrokeThickness="1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Normal">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M0,0 L10,0 L10,10 L0,10 Z"
                                                Fill="Transparent"
                                                Stretch="Uniform"
                                                Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                StrokeThickness="1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>

                    </Button.Style>
                </Button>
                <Button
                    Width="40"
                    Height="35"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding CloseWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path
                        Width="10"
                        Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L10,10 M0,10 L10,0"
                        Stretch="Uniform"
                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        StrokeThickness="1" />
                </Button>

            </StackPanel>
        </Border>


        <!--<StackPanel Grid.Row="1">
            <DockPanel LastChildFill="False">
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding AddTestNodeLinkCommand}"
                    Content="AddTestNodeLink" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding MoveTestNodesCommand}"
                    Content="MoveTestNode" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ClearNodesCommand}"
                    Content="ClearNodes" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ClearNodeLinksCommand}"
                    Content="ClearNodeLinks" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding MoveGroupNodeCommand}"
                    Content="MoveGroupNode" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ChangeGroupInnerSizeCommand}"
                    Content="ChangeGroupInnerSize" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ChangeGroupInnerPositionCommand}"
                    Content="ChangeGroupInnerPosition" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ResetScaleCommand}"
                    Content="ResetScale" />
            </DockPanel>

            <DockPanel>
                <ComboBox
                    Height="24"
                    Margin="4"
                    ItemsSource="{Binding GroupIntersectTypes, Mode=OneTime}"
                    SelectedItem="{Binding SelectedGroupIntersectType}"
                    ToolTip="group intersection type." />
                <ComboBox
                    Height="24"
                    Margin="4"
                    ItemsSource="{Binding RangeSelectionModes, Mode=OneTime}"
                    SelectedItem="{Binding SelectedRangeSelectionMode}"
                    ToolTip="range selection mode." />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="IsLockedAllNodeLinks"
                    IsChecked="{Binding IsLockedAllNodeLinks}" />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="IsEnableAllNodeConnectors"
                    IsChecked="{Binding IsEnableAllNodeConnectors}" />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="AllowToOverrideConnection"
                    IsChecked="{Binding AllowToOverrideConnection}"
                    ToolTip="You can't connect multiple links if true." />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="ClipToBounds"
                    IsChecked="{Binding ClipToBounds}" />
            </DockPanel>
        </StackPanel>-->
        <ctrl:NodeGraph
            x:Name="NodeGraph"
            Grid.Row="3"
            AllowToOverrideConnection="{Binding AllowToOverrideConnection}"
            ClipToBounds="{Binding ClipToBounds}"
            ConnectedLinkCommand="{Binding ConnectedLinkCommand}"
            ContextMenu="{StaticResource NodeGraphContextMenu}"
            DisconnectedLinkCommand="{Binding DisconnectedLinkCommand}"
            GroupNodeStyle="{StaticResource GroupNodeStyle}"
            GroupNodes="{Binding GroupNodeViewModels}"
            ItemContainerStyle="{StaticResource DefaultNodeStyle}"
            ItemsSource="{Binding NodeViewModels}"
            MoveWithMouse="Right"
            NodeLinkStyle="{StaticResource NodeLinkStyle}"
            NodeLinks="{Binding NodeLinkViewModels}"
            PreviewConnectLinkCommand="{Binding PreviewConnectLinkCommand}"
            Scale="{Binding Scale}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ctrl:NodeGraph>
    </Grid>
</Window>
