<Window
    x:Class="NodeGraph.PreviewTest.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:NodeGraph.NET6.Controls;assembly=NodeGraph.NET6"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:NodeGraph.PreviewTest"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:NodeGraph.PreviewTest.ViewModels"
    Title="NodeGraph - prototype"
    Width="1000"
    Height="600"
    AllowsTransparency="False"
    ResizeMode="CanResize"
    WindowStyle="SingleBorderWindow"
    mc:Ignorable="d">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="NodeGraphContextMenu">
            <MenuItem Command="{Binding AddNodeCommand}" Header="AddNode" />
            <MenuItem Command="{Binding AddGroupNodeCommand}" Header="AddGroupNode" />
            <MenuItem Command="{Binding RemoveNodesCommand}" Header="RemoveNodes" />
        </ContextMenu>

        <Style
            x:Key="NodeInputStyle"
            BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}"
            TargetType="{x:Type ctrl:NodeInputContent}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}" />
            <Setter Property="Content" Value="{Binding Label}" />
            <Setter Property="IsEnabled" Value="{Binding IsEnable}" />
            <Setter Property="AllowToConnectMultiple" Value="{Binding AllowToConnectMultiple}" />
        </Style>

        <Style
            x:Key="NodeOutputStyle"
            BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}"
            TargetType="{x:Type ctrl:NodeOutputContent}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}" />
            <Setter Property="Content" Value="{Binding Label}" />
            <Setter Property="IsEnabled" Value="{Binding IsEnable}" />
        </Style>

        <Style
            x:Key="NodeLinkStyle"
            BasedOn="{StaticResource {x:Type ctrl:NodeLink}}"
            TargetType="{x:Type ctrl:NodeLink}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}" />
            <Setter Property="OutputConnectorGuid" Value="{Binding OutputConnectorGuid, Mode=OneWay}" />
            <Setter Property="InputConnectorGuid" Value="{Binding InputConnectorGuid, Mode=OneWay}" />
            <Setter Property="IsLocked" Value="{Binding IsLocked, Mode=OneWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <!--  dont need to specify Mode=TwoWay because link is set default two way property.  -->
        </Style>

        <Style
            x:Key="DefaultNodeStyle"
            BasedOn="{StaticResource {x:Type ctrl:DefaultNode}}"
            TargetType="{x:Type ctrl:DefaultNode}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}" />
            <!--  disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.  -->
            <Setter Property="Position" Value="{Binding Position}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="Inputs" Value="{Binding Inputs}" />
            <Setter Property="InputLayout" Value="Center" />
            <Setter Property="Outputs" Value="{Binding Outputs}" />
            <Setter Property="OutputLayout" Value="Center" />
            <Setter Property="InputMargin" Value="0,5,0,5" />
            <Setter Property="OutputMargin" Value="0,5,0,5" />
            <Setter Property="InputStyle" Value="{StaticResource NodeInputStyle}" />
            <Setter Property="OutputStyle" Value="{StaticResource NodeOutputStyle}" />
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}" />
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}" />
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel>
                            <TextBox Text="{Binding Body}" />
                            <DockPanel TextBlock.Foreground="WhiteSmoke">
                                <TextBlock Margin="0,0,0,4" Text="{Binding Width, StringFormat=Width:{0:F2}}" />
                                <TextBlock Margin="4,0,0,0" Text="{Binding Height, StringFormat=Height:{0:F2}}" />
                            </DockPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="GroupNodeStyle"
            BasedOn="{StaticResource {x:Type ctrl:GroupNode}}"
            TargetType="{x:Type ctrl:GroupNode}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}" />
            <!--  disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.  -->
            <Setter Property="Position" Value="{Binding Position}" />
            <Setter Property="InnerPosition" Value="{Binding InnerPosition}" />
            <Setter Property="InterlockPosition" Value="{Binding InterlockPosition}" />
            <Setter Property="InnerWidth" Value="{Binding InnerWidth}" />
            <Setter Property="InnerHeight" Value="{Binding InnerHeight}" />
            <Setter Property="Comment" Value="{Binding Comment}" />
            <Setter Property="CommentSize" Value="24" />
            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}" />
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}" />
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CornerRadius="{x:Static SystemParameters.WindowCornerRadius}"
            GlassFrameThickness="1,0,1,1"
            NonClientFrameEdges="Left,Right,Bottom"
            ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <!--<RowDefinition Height="64" />-->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Background="#3F3F3F">



            <StackPanel
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">



                <Button
                    Width="35"
                    Height="35"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding MinimizeWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path
                        Width="10"
                        Height="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L10,0"
                        Stretch="Uniform"
                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        StrokeThickness="1" />
                </Button>
                <Button
                    Width="35"
                    Height="35"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding MaximizeWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M2,2 L10,2 L10,10 L2,10 Z M0,0 L8,0 L8,8 L0,8 Z"
                                                Fill="Transparent"
                                                Stretch="Uniform"
                                                Stroke="White"
                                                StrokeThickness="1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Normal">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Path
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M0,0 L10,0 L10,10 L0,10 Z"
                                                Fill="Transparent"
                                                Stretch="Uniform"
                                                Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                StrokeThickness="1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>

                    </Button.Style>
                </Button>
                <Button
                    Width="40"
                    Height="35"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Command="{Binding CloseWindowCommand}"
                    Foreground="White"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path
                        Width="10"
                        Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L10,10 M0,10 L10,0"
                        Stretch="Uniform"
                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                        StrokeThickness="1" />
                </Button>

            </StackPanel>
        </Border>


        <!--<StackPanel Grid.Row="1">
            <DockPanel LastChildFill="False">
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding AddTestNodeLinkCommand}"
                    Content="AddTestNodeLink" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding MoveTestNodesCommand}"
                    Content="MoveTestNode" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ClearNodesCommand}"
                    Content="ClearNodes" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ClearNodeLinksCommand}"
                    Content="ClearNodeLinks" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding MoveGroupNodeCommand}"
                    Content="MoveGroupNode" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ChangeGroupInnerSizeCommand}"
                    Content="ChangeGroupInnerSize" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ChangeGroupInnerPositionCommand}"
                    Content="ChangeGroupInnerPosition" />
                <Button
                    Height="24"
                    Margin="4"
                    Command="{Binding ResetScaleCommand}"
                    Content="ResetScale" />
            </DockPanel>

            <DockPanel>
                <ComboBox
                    Height="24"
                    Margin="4"
                    ItemsSource="{Binding GroupIntersectTypes, Mode=OneTime}"
                    SelectedItem="{Binding SelectedGroupIntersectType}"
                    ToolTip="group intersection type." />
                <ComboBox
                    Height="24"
                    Margin="4"
                    ItemsSource="{Binding RangeSelectionModes, Mode=OneTime}"
                    SelectedItem="{Binding SelectedRangeSelectionMode}"
                    ToolTip="range selection mode." />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="IsLockedAllNodeLinks"
                    IsChecked="{Binding IsLockedAllNodeLinks}" />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="IsEnableAllNodeConnectors"
                    IsChecked="{Binding IsEnableAllNodeConnectors}" />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="AllowToOverrideConnection"
                    IsChecked="{Binding AllowToOverrideConnection}"
                    ToolTip="You can't connect multiple links if true." />
                <CheckBox
                    Height="24"
                    Margin="4"
                    VerticalContentAlignment="Center"
                    Content="ClipToBounds"
                    IsChecked="{Binding ClipToBounds}" />
            </DockPanel>
        </StackPanel>-->
        <ctrl:NodeGraph
            x:Name="NodeGraph"
            Grid.Row="3"
            AllowToOverrideConnection="{Binding AllowToOverrideConnection}"
            ClipToBounds="{Binding ClipToBounds}"
            ConnectedLinkCommand="{Binding ConnectedLinkCommand}"
            ContextMenu="{StaticResource NodeGraphContextMenu}"
            DisconnectedLinkCommand="{Binding DisconnectedLinkCommand}"
            GroupNodeStyle="{StaticResource GroupNodeStyle}"
            GroupNodes="{Binding GroupNodeViewModels}"
            ItemContainerStyle="{StaticResource DefaultNodeStyle}"
            ItemsSource="{Binding NodeViewModels}"
            MoveWithMouse="Right"
            NodeLinkStyle="{StaticResource NodeLinkStyle}"
            NodeLinks="{Binding NodeLinkViewModels}"
            PreviewConnectLinkCommand="{Binding PreviewConnectLinkCommand}"
            Scale="{Binding Scale}">

            <ctrl:NodeGraph.Style>
                <Style BasedOn="{StaticResource {x:Type ctrl:NodeGraph}}" TargetType="{x:Type ctrl:NodeGraph}">
                    <Style.Triggers>
                        <!--  Group intersect  -->
                        <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.CursorPointVMDefine}">
                            <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.CursorPoint}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.BoundingBoxVMDefine}">
                            <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.BoundingBox}" />
                        </DataTrigger>

                        <!--  Range selection mode  -->
                        <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.ContainVMDefine}">
                            <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Contain}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.IntersectVMDefine}">
                            <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Intersect}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ctrl:NodeGraph.Style>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ctrl:NodeGraph>
    </Grid>
</Window>
